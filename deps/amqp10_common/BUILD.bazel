load("@bazel-erlang//:bazel_erlang_lib.bzl", "app_file", "bazel_erlang_lib", "erlc")

py_binary(
    name = "codegen",
    srcs = [
        "codegen.py",
    ],
    imports = ["../../deps/rabbitmq_codegen"],
    deps = [
        "//deps/rabbitmq_codegen:amqp_codegen",
    ],
)

AMQP_SPEC_1_0 = [
    "//deps/rabbitmq_codegen:amqp-1.0/messaging.xml",
    "//deps/rabbitmq_codegen:amqp-1.0/security.xml",
    "//deps/rabbitmq_codegen:amqp-1.0/transport.xml",
    "//deps/rabbitmq_codegen:amqp-1.0/transactions.xml",
]

genrule(
    name = "generated_headers",
    srcs = AMQP_SPEC_1_0,
    outs = ["include/amqp10_framing.hrl"],
    cmd = "$(location :codegen) hrl $(SRCS) > $@",
    tools = [":codegen"],
)

genrule(
    name = "generated_sources",
    srcs = AMQP_SPEC_1_0,
    outs = ["src/amqp10_framing0.erl"],
    cmd = "$(location :codegen) erl $(SRCS) > $@",
    tools = [":codegen"],
)

app_file(
    name = "app_file",
    app_description = "Modules shared by rabbitmq-amqp1.0 and rabbitmq-amqp1.0-client",
    app_name = "amqp10_common",
    app_version = "3.9.0",
    modules = [":beam_files"],
)

erlc(
    name = "beam_files",
    srcs = ["src/amqp10_framing0.erl"] + glob(["src/*.erl"]),
    hdrs = ["include/amqp10_framing.hrl"] + glob(["include/*.hrl"]),
    dest = "ebin",
)

bazel_erlang_lib(
    name = "bazel_erlang_lib",
    hdrs = ["include/amqp10_framing.hrl"] + glob(["include/*.hrl"]),
    app = ":app_file",
    app_name = "amqp10_common",
    app_version = "3.9.0",
    beam = [":beam_files"],
    visibility = ["//visibility:public"],
)

# ct_test(
#     name = "system_SUITE",
#     suites = ["test/system_SUITE.erl"],
#     hdrs = glob(["include/*.hrl"]),
#     deps = [":bazel_erlang_lib"],
# )

# ct_test(
#     name = "unit_SUITE",
#     suites = ["test/unit_SUITE.erl"],
#     hdrs = glob(["include/*.hrl"]),
#     deps = [":bazel_erlang_lib"],
# )

# test_suite(
#     name = "all",
#     tests = [
#         "system_SUITE",
#         "unit_SUITE",
#     ],
# )
